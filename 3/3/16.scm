(define (count-pairs x)
  (if (not (pair? x))
      0
      (+ (count-pairs (car x))
         (count-pairs (cdr x))
		 1)))

(define t '(a b c))
(count-pairs t)

;;          +---+---+      +---+---+      +---+---+
;;   t ---> | * | *-|----> | * | *-|----> | * | / |
;;          +---+---+      +---+---+      +---+---+
;;            |              |              |
;;            V              V              V
;;          +---+          +---+          +---+
;;          | a |          | b |          | c |
;;          +---+          +---+          +---+

(define f '(a b c))
(set-car! f (cddr f))
(count-pairs f)

;;            +-------------------------------+
;;            |                               |
;;            |                               V
;;          +---+---+      +---+---+      +---+---+
;;   f ---> | * | *-|----> | * | *-|----> | * | / |
;;          +---+---+      +---+---+      +---+---+
;;                           |              |
;;                           V              V
;;                         +---+          +---+
;;                         | b |          | c |
;;                         +---+          +---+

(define s '(a b c))
(set-car! s (cdr s))
(set-car! (cdr s) (cddr s))
(count-pairs s)

;;          +---+---+
;;   s ---> | * | * |
;;          +---+---+
;;            |   |
;;            V   V
;;          +---+---+
;;          | * | * |
;;          +---+---+
;;            |   |
;;            V   V
;;          +---+---+
;;          | * | / |
;;          +---+---+
;;            |
;;            V
;;          +---+
;;          | c |
;;          +---+

(define i '(a b c))
(set-car! i i)
(count-pairs i)

;;          +---+---+      +---+---+      +---+---+
;;   i ---> | * | *-|----> | * | *-|----> | * | / |
;;          +---+---+      +---+---+      +---+---+
;;            | ^            |              |
;;            | |            V              V
;;            +-+          +---+          +---+
;;                         | b |          | c |
;;                         +---+          +---+
